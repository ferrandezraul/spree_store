//////////////////////////////  TODO /////////////////////////////////////////////////////

- Rename products (in both csv!!) and put weight into description. Add more products to see how page looks like.
- Add more test.
- Move back to ruby 2.1 and test.
- Make CSV readers stronger to errors. Test what happen with empty description in csv, or any other empty field.
- Add test that checks localization of default taxonomies and taxons
- Fix Products in Taxons csv. Currently, only one product is added to a taxon. Modify TaxonCSV
- delete unnecessary entries from locale files now that products and taxons and their translations are imported
  from CSV files
- Remove as many catalan_translations['ca']['ecocity_shipping_category'] as posible since
  now I should be reading products and taxons from csv
- Write test!!
- Continuar el leer productos con CSV en db/default/products.rb
- Mover codigo/classes a lib y utilizarlo en db/default/products.rb
- Escribir test para lo implementado arriba.


- Write cucumber scenario para comprobar que pedido minimo es 99 EUR
- Set up Mailer

//////////////////////////////  TIPS /////////////////////////////////////////////////////

(Use sqlitebrowser to inspect development.sqlite3 database and create my db/seed.rb with i.e. first_or_create )
Spree has several options for loading seed data,
but perhaps the easiest to use here is to put ruby files in site/db/default/.
These files are processed when rake db:seed is called, and will be processed in the order of the migration timestamps.

//////////////////////// ICONS ///////////////////////////////////////////

Thanks to http://icons8.com
If I change the paperclip settings for images (see config/initializers/spree.rb) , to see the changes run:
bundle exec rake paperclip:refresh:thumbnails class=Spree::Image

Note that you should upload images with same height and width if possible in order to improve views,
otherwise you would have to tweek the views with css. (See commented lines in /app/assets/stylesheets/spree/frontend/screen.css.scss
for .product-image class where min-height: 110px is commented out. And .product-image img where min-height is also commented out

///////////////////////////////////////////////////////////////////////////

Seguir con test:

run with:
    1. rake db:test_setup_new (my own task under lib/task)
    2. cucumber
    3. rspec

1. Anyadir test para comprobar que: (Usar capybara or RSPEC or cucumber)

    - logo sobre escrito
    - Footer Power by sobre escrito

//////////////////////////////  HELPERS /////////////////////////////////////////////////////

rake db:setup_new
rake db:setup_new RAILS_ENV=test
