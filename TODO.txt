//////////////////////////////  TODO ///////////////////////////////////////////////////// 

Set new attribute to Spree::User to indicate if it is a shop, coope or customer.
Or add a new role (role is an array of strings?)
  Decorators (with class_eval blocks) and migrations for existing models are a common way to extend and alter functionality.  If you are adding much more functionality than just a few tweaks here and there, you might consider creating one or more extensions for your code to live in. 

  rails g spree:extension <extension_name>

  This will make your code reusable.  It can help to have a look at existing extensions to see what techniques others are using.  Have a look at the official extensions to get an idea of what is acceptable among the rd guys.  

Customize your footer with deface. See app/overwrides/footer.rb
  Use rake deface:test_selector[shared/_head,title]

Set default image for taxons. Change view to list (too many porc products).

Spree uses bootstrap-sass
https://github.com/twbs/bootstrap-sass

Check if now Javascript work when i write it. For example after adding buttons to export csv in admin panel
Check Turbolinks.
http://railscasts.com/episodes/390-turbolinks
Run test


Finish http://railscasts.com/episodes/396-importing-csv-and-excel?view=asciicast. 
When importing products throught the new link in admin panel, if it fails pop a warning and revert changes. Pending validation, ...
Take a look at spree_sample

Create more Links to export taxonomies, taxons, etc?
Seed data is inside db/default

Forget cucumber. Move cucumber test cases to rspec. First fix rspec
Read test guides to fix cucmber problem with assert_equal --> comes from minitest gem??
- Fix cucumber after update to spree 2.3 ( https://github.com/cucumber/cucumber-rails )
  issue might be in features/support/env.rb
  this file is autogenerated by the gem cucumber-rails
  previously I had:

  -require 'capybara'
  -
  -
  -Capybara.javascript_driver = :webkit
  -Capybara.current_driver = :webkit
  -
  -# Needed to have javascript and css using cucumber and capybara (save_and_open).
  -# Curiosamente no necesario para rspec donde si que incluye javascript y css (save_and_open)
  -Capybara.asset_host = "http://localhost:3000"

  -Cucumber::Rails::Database.javascript_strategy = :transaction
  -
  +Cucumber::Rails::Database.javascript_strategy = :truncation

- Verify update to spree 2.4 is succesfull
- Write cucumber scenario para comprobar que pedido minimo es 99 EUR
- Set up Mailer
